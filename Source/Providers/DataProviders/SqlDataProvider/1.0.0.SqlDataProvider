IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]', N'U') IS NULL
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]
	(
		AppointmentTypeId int NOT NULL IDENTITY(1,1) 
			CONSTRAINT {objectQualifier}PK_EngageBooking_AppointmentType PRIMARY KEY,
		Name nvarchar(50) NOT NULL,
		CreationDate datetime NOT NULL DEFAULT GETDATE(),
		RevisionDate datetime NOT NULL DEFAULT GETDATE(),
		RevisingUser int NOT NULL
	)
END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_Appointment]', N'U') IS NULL
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
	(
	AppointmentId int NOT NULL IDENTITY(1,1) 
		CONSTRAINT {objectQualifier}PK_EngageBooking_Appointment PRIMARY KEY,
	AppointmentTypeId int NOT NULL 
		CONSTRAINT {objectQualifier}FK_EngageBooking_Appointment_EngageBooking_AppointmentType FOREIGN KEY REFERENCES {objectQualifier}EngageBooking_AppointmentType (AppointmentTypeId),
	ModuleId int NOT NULL,
	Title nvarchar(50) NOT NULL,
	Description ntext NULL,
	Notes ntext NULL,
	Address1 nvarchar(50) NULL,
	Address2 nvarchar(50) NULL,
	City nvarchar(50) NULL,
	RegionId int NULL,
	PostalCode nvarchar(50) NULL,
	Phone nvarchar(50) NULL,
	AdditionalAddressInfo nvarchar(50) NULL,
	ContactStreet nvarchar(50) NULL,
	ContactPhone nvarchar(50) NULL,
	RequestorName nvarchar(50) NULL,
	RequestorPhoneType nvarchar(50) NULL,
	RequestorPhone nvarchar(13) NULL,
	RequestorEmail nvarchar(100) NULL,
	RequestorAltPhoneType nvarchar(50) NULL,
	RequestorAltPhone nvarchar(13) NULL,
	StartDateTime datetime NOT NULL,
	EndDateTime datetime NOT NULL,
	NumberOfParticipants int NOT NULL DEFAULT 0,
	ParticipantGender nvarchar(25) NULL,
	ParticipantFlag nchar(1) NOT NULL,
	ParticipantInstructions ntext NULL,
	NumberOfSpecialParticipants int NOT NULL DEFAULT 0,
	Custom1 ntext NULL,
	Custom2 ntext NULL,
	Custom3 ntext NULL,
	Custom4 ntext NULL,
	Custom5 ntext NULL,
	Custom6 ntext NULL,
	Custom7 ntext NULL,
	Custom8 ntext NULL,
	Custom9 ntext NULL,
	Custom10 ntext NULL,
	IsAccepted bit NULL,
	AcceptKey uniqueidentifier NOT NULL DEFAULT NEWID(),
	DeclineKey uniqueidentifier NOT NULL DEFAULT NEWID(),
	CreationDate datetime NOT NULL DEFAULT GETDATE(),
	RevisionDate datetime NOT NULL DEFAULT GETDATE(),
	RevisingUser int NOT NULL
	)
END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_EmailQueue]', N'U') IS NULL
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EngageBooking_EmailQueue]
	(
	QueueID int NOT NULL IDENTITY(1,1)
		CONSTRAINT {objectQualifier}PK_EngageBooking_EmailQueue PRIMARY KEY,
	PortalID int NOT NULL,
	RecipientList ntext NOT NULL,
	Subject nvarchar(998) NOT NULL,
	Body ntext NOT NULL,
	CreationDate datetime NOT NULL DEFAULT GETDATE()
	)
END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spGetAllAppointments]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAllAppointments]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAllAppointments](
	@moduleId int,
	@sortExpression nvarchar(255) = 'StartDateTime, EndDateTime, Title',
	@pageSize int,
	@pageIndex int
)
AS
BEGIN
	CREATE TABLE #allAppointments
	(
		RowIndex int NOT NULL IDENTITY(1,1),
		AppointmentId int
	)
	
	DECLARE @sql nvarchar(4000)
	SET @sql =        'INSERT INTO #allAppointments ([AppointmentId]) '
	SET @sql = @sql + 'SELECT [AppointmentId] '
	SET @sql = @sql + 'FROM {databaseOwner}[{objectQualifier}EngageBooking_Appointment] '
	SET @sql = @sql + 'WHERE ModuleId = @moduleId '
	SET @sql = @sql + 'ORDER BY ' + @sortExpression

	EXEC sp_executesql @sql, N'@moduleId int', @moduleId
	
	SELECT @@RowCount AS TotalRecords

	IF (@pageSize = 0 OR @pageSize IS NULL OR @pageIndex IS NULL)
	 	BEGIN
	 		SELECT a.* FROM #allAppointments aa
			JOIN {databaseOwner}[{objectQualifier}EngageBooking_Appointment] a on (aa.AppointmentId = a.AppointmentId)
	 	END
	ELSE
	 	BEGIN
	 		SELECT a.* FROM #allAppointments aa
			JOIN {databaseOwner}[{objectQualifier}EngageBooking_Appointment] a on (aa.AppointmentId = a.AppointmentId)
	 		WHERE (aa.RowIndex >= @pageIndex * @pageSize + 1) AND aa.RowIndex < (@pageIndex * @pageSize) + @pageSize + 1
	 	END
END
GO


IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spGetAppointments]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointments]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointments](
	@moduleId int,
	@isAccepted bit,
	@sortExpression nvarchar(255) = 'StartDateTime, EndDateTime, Title',
	@pageSize int,
	@pageIndex int
)
AS
BEGIN
	CREATE TABLE #allAppointments
	(
		RowIndex int NOT NULL IDENTITY(1,1),
		AppointmentId int
	)
	
	DECLARE @sql nvarchar(4000)
	SET @sql =        'INSERT INTO #allAppointments ([AppointmentId]) '
	SET @sql = @sql + 'SELECT [AppointmentId] '
	SET @sql = @sql + 'FROM {databaseOwner}[{objectQualifier}EngageBooking_Appointment] '
	SET @sql = @sql + 'WHERE ModuleId = @moduleId '
	SET @sql = @sql + 'AND ((@isAccepted IS NULL AND IsAccepted IS NULL) OR @isAccepted = IsAccepted) '
	SET @sql = @sql + 'ORDER BY ' + @sortExpression

	EXEC sp_executesql @sql, N'@moduleId int, @isAccepted bit', @moduleId, @isAccepted
	
	SELECT @@RowCount AS TotalRecords

	IF (@pageSize = 0 OR @pageSize IS NULL OR @pageIndex IS NULL)
	 	BEGIN
	 		SELECT a.* FROM #allAppointments aa
			JOIN {databaseOwner}[{objectQualifier}EngageBooking_Appointment] a on (aa.AppointmentId = a.AppointmentId)
	 	END
	ELSE
	 	BEGIN
	 		SELECT a.* FROM #allAppointments aa
			JOIN {databaseOwner}[{objectQualifier}EngageBooking_Appointment] a on (aa.AppointmentId = a.AppointmentId)
	 		WHERE (aa.RowIndex >= @pageIndex * @pageSize + 1) AND aa.RowIndex < (@pageIndex * @pageSize) + @pageSize + 1
	 	END
END
GO


IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentsByDateRange]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentsByDateRange]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentsByDateRange](
	@moduleId int,
	@startDateTime datetime,
	@endDateTime datetime
)
AS
BEGIN
	
SELECT AppointmentId, AppointmentTypeId, ModuleId, Title, Description, Notes,
	   Address1, Address2, City, RegionId, PostalCode, Phone, 
	   AdditionalAddressInfo, ContactStreet, ContactPhone, RequestorName,
	   RequestorPhoneType, RequestorPhone, RequestorEmail, RequestorAltPhoneType,
	   RequestorAltPhone, StartDateTime, EndDateTime, 
	   NumberOfParticipants, NumberOfSpecialParticipants,
	   ParticipantGender, ParticipantFlag, IsAccepted, AcceptKey, DeclineKey, 
       [Custom1], Custom2, Custom3, Custom4, Custom5, Custom6, Custom7, Custom8, 
       Custom9, Custom10, CreationDate, RevisionDate
FROM   {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
WHERE  ModuleId = @moduleId
  AND  StartDateTime >= @startDateTime 
  AND  StartDateTime <= @endDateTime
  
END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spDeleteAppointment]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spDeleteAppointment]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spDeleteAppointment](
	@appointmentId int
)
AS
BEGIN
	 DELETE FROM   {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
	 WHERE  AppointmentId = @appointmentId
END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spInsertAppointment]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spInsertAppointment]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spInsertAppointment]
(
   @appointmentTypeId int
   ,@moduleId int
   ,@title nvarchar(50)
   ,@description ntext
   ,@notes ntext
   ,@address1 nvarchar(50)
   ,@address2 nvarchar(50)
   ,@city nvarchar(50)
   ,@regionId int
   ,@postalCode nvarchar(50)
   ,@phone nvarchar(50)
   ,@additionalAddressInfo nvarchar(50)
   ,@contactStreet nvarchar(50)
   ,@contactPhone nvarchar(50)
   ,@requestorName nvarchar(50)
   ,@requestorPhoneType nvarchar(50)
   ,@requestorPhone nvarchar(13)
   ,@requestorEmail nvarchar(100)
   ,@requestorAltPhoneType nvarchar(50)
   ,@requestorAltPhone nvarchar(13)
   ,@startDateTime datetime
   ,@endDateTime datetime
   ,@numberOfParticipants int
   ,@participantGender nvarchar(25)
   ,@participantFlag nchar(1)
   ,@participantInstructions ntext
   ,@numberOfSpecialParticipants int
   ,@custom1 ntext
   ,@custom2 ntext
   ,@custom3 ntext
   ,@custom4 ntext
   ,@custom5 ntext
   ,@custom6 ntext
   ,@custom7 ntext
   ,@custom8 ntext
   ,@custom9 ntext
   ,@custom10 ntext
   ,@isAccepted bit
   ,@revisingUser int
)
AS
BEGIN

INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
           ([AppointmentTypeId]
           ,[ModuleId]
           ,[Title]
           ,[Description]
           ,[Notes]
           ,[Address1]
           ,[Address2]
           ,[City]
           ,[RegionId]
           ,[PostalCode]
           ,[Phone]
           ,[AdditionalAddressInfo]
           ,[ContactStreet]
           ,[ContactPhone]
           ,[RequestorName]
           ,[RequestorPhoneType]
           ,[RequestorPhone]
           ,[RequestorEmail]
           ,[RequestorAltPhoneType]
           ,[RequestorAltPhone]
           ,[StartDateTime]
           ,[EndDateTime]
           ,[NumberOfParticipants]
           ,[ParticipantGender]
           ,[ParticipantFlag]
           ,[ParticipantInstructions]
           ,[NumberOfSpecialParticipants]
           ,[Custom1]
           ,[Custom2]
           ,[Custom3]
           ,[Custom4]
           ,[Custom5]
           ,[Custom6]
           ,[Custom7]
           ,[Custom8]
           ,[Custom9]
           ,[Custom10]
           ,[IsAccepted]
           ,[CreationDate]
           ,[RevisionDate]
           ,[RevisingUser])
     VALUES
           (@appointmentTypeId
           ,@moduleId
           ,@title
           ,@description
           ,@notes
           ,@address1
           ,@address2
           ,@city
           ,@regionId
           ,@postalCode
           ,@phone
           ,@additionalAddressInfo
           ,@contactStreet
           ,@contactPhone
           ,@requestorName
           ,@requestorPhoneType
           ,@requestorPhone
           ,@requestorEmail
           ,@requestorAltPhoneType
           ,@requestorAltPhone
           ,@startDateTime
           ,@endDateTime
           ,@numberOfParticipants
           ,@participantGender
           ,@participantFlag
           ,@participantInstructions
           ,@numberOfSpecialParticipants
           ,@custom1
           ,@custom2
           ,@custom3
           ,@custom4
           ,@custom5
           ,@custom6
           ,@custom7
           ,@custom8
           ,@custom9
           ,@custom10
           ,@isAccepted
           ,GETDATE()
           ,GETDATE()
           ,@revisingUser)

	SELECT AppointmentId, AcceptKey, DeclineKey
	FROM   {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
	WHERE  AppointmentId = SCOPE_IDENTITY()
END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spUpdateAppointment]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spUpdateAppointment]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spUpdateAppointment]
(
   @appointmentId int
   ,@appointmentTypeId int
   ,@title nvarchar(50)
   ,@description ntext
   ,@notes ntext
   ,@address1 nvarchar(50)
   ,@address2 nvarchar(50)
   ,@city nvarchar(50)
   ,@regionId int
   ,@postalCode nvarchar(50)
   ,@phone nvarchar(50)
   ,@additionalAddressInfo nvarchar(50)
   ,@contactStreet nvarchar(50)
   ,@contactPhone nvarchar(50)
   ,@requestorName nvarchar(50)
   ,@requestorPhoneType nvarchar(50)
   ,@requestorPhone nvarchar(13)
   ,@requestorEmail nvarchar(100)
   ,@requestorAltPhoneType nvarchar(50)
   ,@requestorAltPhone nvarchar(13)
   ,@startDateTime datetime
   ,@endDateTime datetime
   ,@numberOfParticipants int
   ,@participantGender nvarchar(25)
   ,@participantFlag nchar(1)
   ,@participantInstructions ntext
   ,@numberOfSpecialParticipants int
   ,@custom1 ntext
   ,@custom2 ntext
   ,@custom3 ntext
   ,@custom4 ntext
   ,@custom5 ntext
   ,@custom6 ntext
   ,@custom7 ntext
   ,@custom8 ntext
   ,@custom9 ntext
   ,@custom10 ntext
   ,@isAccepted bit
   ,@revisingUser int
)
AS
BEGIN

UPDATE {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
SET [AppointmentTypeId] = @appointmentTypeId
   ,[Title] = @title
   ,[Description] = @description
   ,[Notes] = @notes
   ,[Address1] = @address1
   ,[Address2] = @address2
   ,[City] = @city
   ,[RegionId] = @regionId
   ,[PostalCode] = @postalCode
   ,[Phone] = @phone
   ,[AdditionalAddressInfo] = @additionalAddressInfo
   ,[ContactStreet] = @contactStreet
   ,[ContactPhone] = @contactPhone
   ,[RequestorName] = @requestorName
   ,[RequestorPhoneType] = @requestorPhoneType
   ,[RequestorPhone] = @requestorPhone
   ,[RequestorEmail] = @requestorEmail
   ,[RequestorAltPhoneType] = @requestorAltPhoneType
   ,[RequestorAltPhone] = @requestorAltPhone
   ,[StartDateTime] = @startDateTime
   ,[EndDateTime] = @endDateTime
   ,[NumberOfParticipants] = @numberOfParticipants
   ,[ParticipantGender] = @participantGender
   ,[ParticipantFlag] = @participantFlag
   ,[ParticipantInstructions] = @participantInstructions
   ,[NumberOfSpecialParticipants] = @numberOfSpecialParticipants
   ,[Custom1] = @custom1
   ,[Custom2] = @custom2
   ,[Custom3] = @custom3
   ,[Custom4] = @custom4
   ,[Custom5] = @custom5
   ,[Custom6] = @custom6
   ,[Custom7] = @custom7
   ,[Custom8] = @custom8
   ,[Custom9] = @custom9
   ,[Custom10] = @custom10
   ,[IsAccepted] = @isAccepted
   ,[RevisionDate] = GETDATE()
   ,[RevisingUser] = @revisingUser
WHERE AppointmentId = @appointmentId

END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spGetAppointment]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointment]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointment]
(
   @appointmentId int
)
AS
BEGIN

SELECT AppointmentId, AppointmentTypeId, ModuleId, Title, Description, Notes,
	   Address1, Address2, City, RegionId, PostalCode, Phone, 
	   AdditionalAddressInfo, ContactStreet, ContactPhone, RequestorName,
	   RequestorPhoneType, RequestorPhone, RequestorEmail, RequestorAltPhoneType,
	   RequestorAltPhone, StartDateTime, EndDateTime, 
	   NumberOfParticipants, NumberOfSpecialParticipants,
	   ParticipantGender, ParticipantFlag, IsAccepted, AcceptKey, DeclineKey, 
       Custom1, Custom2, Custom3, Custom4, Custom5, Custom6, Custom7, Custom8, 
       Custom9, Custom10, CreationDate, RevisionDate
FROM {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
WHERE AppointmentId = @appointmentId

END
GO

/*****************Appointment Types***************************/
IF NOT EXISTS (SELECT NULL FROM {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType])
BEGIN
	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Business', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Community Event', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Educational', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Fed or State Govt', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Local Govt', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Medical', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Musical', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Psychiatric', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Religious', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Seminar', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Theatrical', GETDATE(), GETDATE(), 0)

	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]([Name] ,[CreationDate],[RevisionDate],[RevisingUser])
	VALUES ('Other', GETDATE(), GETDATE(), 0)
END

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentTypes]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentTypes]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentTypes]
AS
BEGIN
	 SELECT * FROM   {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]
END
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spDeclineAppointment]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spDeclineAppointment]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spDeclineAppointment]
(  
   @appointmentId int,  
   @revisingUser int  
)  
AS  
BEGIN  
  
UPDATE {databaseOwner}[{objectQualifier}EngageBooking_Appointment]  
SET IsAccepted = 0,  
 RevisingUser = @revisingUser,  
 RevisionDate = GETDATE()  
WHERE AppointmentId = @appointmentId  
  
END  
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spCanCreateAppointmentAt]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spCanCreateAppointmentAt]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spCanCreateAppointmentAt]
(  
	@moduleId int,
    @start datetime,
    @end datetime
)  
AS  
BEGIN  

SELECT CASE WHEN COUNT(*) > 0 THEN CAST(0 AS bit) ELSE CAST(1 AS bit) END
FROM {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
WHERE ModuleId = @moduleId
 AND IsAccepted = 1
 AND ((@start > StartDateTime  AND @start < EndDateTime)
 OR (@end > StartDateTime AND @end < EndDateTime))

END  
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spAcceptAppointment]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spAcceptAppointment]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spAcceptAppointment]
(  
   @appointmentId int,  
   @revisingUser int,
   @returnSuccessBit bit = 1
)  
AS  
BEGIN  

DECLARE @moduleId int
DECLARE @start datetime
DECLARE @end datetime

SELECT @moduleId = ModuleId, @start = StartDateTime, @end = EndDateTime 
FROM {databaseOwner}{objectQualifier}EngageBooking_Appointment 
WHERE AppointmentId = @appointmentId

CREATE TABLE #StoredProcResult(CanCreate bit)
INSERT INTO #StoredProcResult(CanCreate)
EXEC {databaseOwner}{objectQualifier}EngageBooking_spCanCreateAppointmentAt @moduleId, @start, @end

IF (SELECT CanCreate FROM #StoredProcResult) = 1
BEGIN
	UPDATE {databaseOwner}[{objectQualifier}EngageBooking_Appointment]  
	SET IsAccepted = 1,  
	 RevisingUser = @revisingUser,  
	 RevisionDate = GETDATE()  
	WHERE AppointmentId = @appointmentId  
END

IF @returnSuccessBit = 1
	BEGIN
		SELECT CanCreate FROM #StoredProcResult
	END
END  
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spApproveByKey]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spApproveByKey]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spApproveByKey]
(  
   @actionKey uniqueidentifier
)  
AS  
BEGIN  

DECLARE @appointmentId int
SELECT @appointmentId = AppointmentId
FROM   {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
WHERE  AcceptKey = @actionKey

IF @appointmentId IS NOT NULL
	BEGIN
		EXEC {databaseOwner}[{objectQualifier}EngageBooking_spAcceptAppointment] @appointmentId, -2, 0
	END
ELSE 
	BEGIN
		SELECT @appointmentId = AppointmentId
		FROM   {databaseOwner}[{objectQualifier}EngageBooking_Appointment]
		WHERE  DeclineKey = @actionKey

		IF @appointmentId IS NOT NULL
		BEGIN
			EXEC {databaseOwner}[{objectQualifier}EngageBooking_spDeclineAppointment] @appointmentId, -2
		END
	END

EXEC {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointment] @appointmentId
END  
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spQueueEmail]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spQueueEmail]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spQueueEmail]
(  
   @portalId int,
   @recipientList ntext,
   @subject	nvarchar(998),
   @body ntext
)  
AS  
	INSERT INTO {databaseOwner}[{objectQualifier}EngageBooking_EmailQueue] (PortalId, RecipientList, Subject, Body)
	VALUES (@portalId, @recipientList, @subject, @body)
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spClearQueuedEmail]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spClearQueuedEmail]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spClearQueuedEmail]
(
	@queueId int 
)
AS
	DELETE FROM {databaseOwner}[{objectQualifier}EngageBooking_EmailQueue]
	WHERE QueueID = @queueId
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spGetQueuedEmails]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetQueuedEmails]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetQueuedEmails]
AS
	SELECT PortalId, RecipientList, Subject, Body FROM {databaseOwner}[{objectQualifier}EngageBooking_EmailQueue]
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentType]', N'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentType]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageBooking_spGetAppointmentType]
(
	@appointmentTypeId int
)
AS
	SELECT AppointmentTypeId, Name 
	FROM {databaseOwner}[{objectQualifier}EngageBooking_AppointmentType]
	WHERE AppointmentTypeId = @appointmentTypeId
GO
